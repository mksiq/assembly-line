These Milestones created an interesting application that simulates an Assembly Line. After it was complete the logic behind it was very clear, but while I was coding it I struggled a bit to get to the right output for Milestone 3 as I always tried to follow the loop order not on the Stations txt files but starting on the first Workstation (Power Supply).
It provided a chance to use many different concepts that we learned during this term, like types of associations and what class owns a resource or not, for example, Workstation had a pointer to a next station but would not manage its resources. Also, it was an opportunity to use lambdas and functions from the algorithm library. 
For all 3 milestones, I had to makes changes to the Utilities class as my suppositions were not right. Especially about the more that could be used as a flag in a loop to keep creating new items in the CustomerOrder constructor. I could have just counted the number of remaining delimiters but I decided to make more use of the Utilities class. However, I am aware that it was required to keep resizing the dynamic array and is certainly not as efficient as just allocating it once after counting the number o delimiters.
 Only on MS3, I noticed that I should be using Utilities width to set the largest width to format printing for the other classes by setting it right after extract the token that defines the minimum width.